//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ConvictsData datasource.
    /// </summary>
    public sealed partial class ConvictsDataService
        : global::LightSwitchApplication.ConvictsData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConvictsDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_Inserting(global::LightSwitchApplication.Convict entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_Inserted(global::LightSwitchApplication.Convict entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_Updating(global::LightSwitchApplication.Convict entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_Updated(global::LightSwitchApplication.Convict entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_Deleting(global::LightSwitchApplication.Convict entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_Deleted(global::LightSwitchApplication.Convict entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_Validate(global::LightSwitchApplication.Convict entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Convicts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Convict, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_Inserting(global::LightSwitchApplication.Leaderboard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_Inserted(global::LightSwitchApplication.Leaderboard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_Updating(global::LightSwitchApplication.Leaderboard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_Updated(global::LightSwitchApplication.Leaderboard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_Deleting(global::LightSwitchApplication.Leaderboard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_Deleted(global::LightSwitchApplication.Leaderboard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_Validate(global::LightSwitchApplication.Leaderboard entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboards_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Leaderboard, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_Inserting(global::LightSwitchApplication.PaymentRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_Inserted(global::LightSwitchApplication.PaymentRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_Updating(global::LightSwitchApplication.PaymentRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_Updated(global::LightSwitchApplication.PaymentRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_Deleting(global::LightSwitchApplication.PaymentRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_Deleted(global::LightSwitchApplication.PaymentRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_Validate(global::LightSwitchApplication.PaymentRecord entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentRecords_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PaymentRecord, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_Inserting(global::LightSwitchApplication.Team entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_Inserted(global::LightSwitchApplication.Team entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_Updating(global::LightSwitchApplication.Team entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_Updated(global::LightSwitchApplication.Team entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_Deleting(global::LightSwitchApplication.Team entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_Deleted(global::LightSwitchApplication.Team entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_Validate(global::LightSwitchApplication.Team entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Teams_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Team, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ConvictsDataService, global::LightSwitchApplication.Convict>
                __ConvictsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ConvictsDataService, global::LightSwitchApplication.Convict>(
                    "Convicts",
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_CanInsert,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_CanUpdate,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_CanDelete,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_CanRead,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_Inserting,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_Inserted,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_Updating,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_Updated,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_Deleting,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_Deleted,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_Validate,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Convicts_Filter);
            private static bool __Convicts_CanInsert(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Convicts_CanInsert(ref result);
                return result;
            }
            private static bool __Convicts_CanUpdate(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Convicts_CanUpdate(ref result);
                return result;
            }
            private static bool __Convicts_CanDelete(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Convicts_CanDelete(ref result);
                return result;
            }
            private static bool __Convicts_CanRead(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Convicts_CanRead(ref result);
                return result;
            }
            private static void __Convicts_Inserting(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Convict e)
            {
                d.Convicts_Inserting(e);
            }
            private static void __Convicts_Inserted(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Convict e)
            {
                d.Convicts_Inserted(e);
            }
            private static void __Convicts_Updating(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Convict e)
            {
                d.Convicts_Updating(e);
            }
            private static void __Convicts_Updated(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Convict e)
            {
                d.Convicts_Updated(e);
            }
            private static void __Convicts_Deleting(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Convict e)
            {
                d.Convicts_Deleting(e);
            }
            private static void __Convicts_Deleted(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Convict e)
            {
                d.Convicts_Deleted(e);
            }
            private static void __Convicts_Validate(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Convict e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Convicts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Convict, bool>> __Convicts_Filter(global::LightSwitchApplication.ConvictsDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Convict, bool>> filter = null;
                d.Convicts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ConvictsDataService, global::LightSwitchApplication.Leaderboard>
                __LeaderboardsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ConvictsDataService, global::LightSwitchApplication.Leaderboard>(
                    "Leaderboards",
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_CanInsert,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_CanUpdate,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_CanDelete,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_CanRead,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_Inserting,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_Inserted,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_Updating,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_Updated,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_Deleting,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_Deleted,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_Validate,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Leaderboards_Filter);
            private static bool __Leaderboards_CanInsert(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Leaderboards_CanInsert(ref result);
                return result;
            }
            private static bool __Leaderboards_CanUpdate(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Leaderboards_CanUpdate(ref result);
                return result;
            }
            private static bool __Leaderboards_CanDelete(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Leaderboards_CanDelete(ref result);
                return result;
            }
            private static bool __Leaderboards_CanRead(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Leaderboards_CanRead(ref result);
                return result;
            }
            private static void __Leaderboards_Inserting(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Leaderboard e)
            {
                d.Leaderboards_Inserting(e);
            }
            private static void __Leaderboards_Inserted(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Leaderboard e)
            {
                d.Leaderboards_Inserted(e);
            }
            private static void __Leaderboards_Updating(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Leaderboard e)
            {
                d.Leaderboards_Updating(e);
            }
            private static void __Leaderboards_Updated(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Leaderboard e)
            {
                d.Leaderboards_Updated(e);
            }
            private static void __Leaderboards_Deleting(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Leaderboard e)
            {
                d.Leaderboards_Deleting(e);
            }
            private static void __Leaderboards_Deleted(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Leaderboard e)
            {
                d.Leaderboards_Deleted(e);
            }
            private static void __Leaderboards_Validate(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Leaderboards_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Leaderboard, bool>> __Leaderboards_Filter(global::LightSwitchApplication.ConvictsDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Leaderboard, bool>> filter = null;
                d.Leaderboards_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ConvictsDataService, global::LightSwitchApplication.PaymentRecord>
                __PaymentRecordsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ConvictsDataService, global::LightSwitchApplication.PaymentRecord>(
                    "PaymentRecords",
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_CanInsert,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_CanUpdate,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_CanDelete,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_CanRead,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_Inserting,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_Inserted,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_Updating,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_Updated,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_Deleting,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_Deleted,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_Validate,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__PaymentRecords_Filter);
            private static bool __PaymentRecords_CanInsert(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.PaymentRecords_CanInsert(ref result);
                return result;
            }
            private static bool __PaymentRecords_CanUpdate(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.PaymentRecords_CanUpdate(ref result);
                return result;
            }
            private static bool __PaymentRecords_CanDelete(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.PaymentRecords_CanDelete(ref result);
                return result;
            }
            private static bool __PaymentRecords_CanRead(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.PaymentRecords_CanRead(ref result);
                return result;
            }
            private static void __PaymentRecords_Inserting(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.PaymentRecord e)
            {
                d.PaymentRecords_Inserting(e);
            }
            private static void __PaymentRecords_Inserted(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.PaymentRecord e)
            {
                d.PaymentRecords_Inserted(e);
            }
            private static void __PaymentRecords_Updating(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.PaymentRecord e)
            {
                d.PaymentRecords_Updating(e);
            }
            private static void __PaymentRecords_Updated(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.PaymentRecord e)
            {
                d.PaymentRecords_Updated(e);
            }
            private static void __PaymentRecords_Deleting(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.PaymentRecord e)
            {
                d.PaymentRecords_Deleting(e);
            }
            private static void __PaymentRecords_Deleted(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.PaymentRecord e)
            {
                d.PaymentRecords_Deleted(e);
            }
            private static void __PaymentRecords_Validate(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.PaymentRecord e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PaymentRecords_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PaymentRecord, bool>> __PaymentRecords_Filter(global::LightSwitchApplication.ConvictsDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PaymentRecord, bool>> filter = null;
                d.PaymentRecords_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ConvictsDataService, global::LightSwitchApplication.Team>
                __TeamsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ConvictsDataService, global::LightSwitchApplication.Team>(
                    "Teams",
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_CanInsert,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_CanUpdate,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_CanDelete,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_CanRead,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_Inserting,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_Inserted,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_Updating,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_Updated,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_Deleting,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_Deleted,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_Validate,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Teams_Filter);
            private static bool __Teams_CanInsert(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Teams_CanInsert(ref result);
                return result;
            }
            private static bool __Teams_CanUpdate(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Teams_CanUpdate(ref result);
                return result;
            }
            private static bool __Teams_CanDelete(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Teams_CanDelete(ref result);
                return result;
            }
            private static bool __Teams_CanRead(global::LightSwitchApplication.ConvictsDataService d)
            {
                bool result = true;
                d.Teams_CanRead(ref result);
                return result;
            }
            private static void __Teams_Inserting(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Team e)
            {
                d.Teams_Inserting(e);
            }
            private static void __Teams_Inserted(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Team e)
            {
                d.Teams_Inserted(e);
            }
            private static void __Teams_Updating(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Team e)
            {
                d.Teams_Updating(e);
            }
            private static void __Teams_Updated(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Team e)
            {
                d.Teams_Updated(e);
            }
            private static void __Teams_Deleting(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Team e)
            {
                d.Teams_Deleting(e);
            }
            private static void __Teams_Deleted(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Team e)
            {
                d.Teams_Deleted(e);
            }
            private static void __Teams_Validate(global::LightSwitchApplication.ConvictsDataService d, global::LightSwitchApplication.Team e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Teams_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Team, bool>> __Teams_Filter(global::LightSwitchApplication.ConvictsDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Team, bool>> filter = null;
                d.Teams_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ConvictsDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ConvictsDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ConvictsDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ConvictsDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ConvictsDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ConvictsDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ConvictsDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ConvictsDataService>(
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ConvictsDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ConvictsDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ConvictsDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ConvictsDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
