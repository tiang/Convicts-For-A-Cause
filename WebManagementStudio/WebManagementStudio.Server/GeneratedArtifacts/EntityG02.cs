

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Leaderboard : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Leaderboard entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Leaderboard()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Leaderboard(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Leaderboard> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Leaderboard.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboard_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Leaderboard_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Leaderboard.DetailsClass.GetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ID);
            }
            set
            {
                global::LightSwitchApplication.Leaderboard.DetailsClass.SetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ConvictCode
        {
            get
            {
                return global::LightSwitchApplication.Leaderboard.DetailsClass.GetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ConvictCode);
            }
            set
            {
                global::LightSwitchApplication.Leaderboard.DetailsClass.SetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ConvictCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConvictCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConvictCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConvictCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TeamCode
        {
            get
            {
                return global::LightSwitchApplication.Leaderboard.DetailsClass.GetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamCode);
            }
            set
            {
                global::LightSwitchApplication.Leaderboard.DetailsClass.SetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Total
        {
            get
            {
                return global::LightSwitchApplication.Leaderboard.DetailsClass.GetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.Total);
            }
            set
            {
                global::LightSwitchApplication.Leaderboard.DetailsClass.SetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.Total, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ConvictName
        {
            get
            {
                return global::LightSwitchApplication.Leaderboard.DetailsClass.GetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ConvictName);
            }
            set
            {
                global::LightSwitchApplication.Leaderboard.DetailsClass.SetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ConvictName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConvictName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConvictName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConvictName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TeamName
        {
            get
            {
                return global::LightSwitchApplication.Leaderboard.DetailsClass.GetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamName);
            }
            set
            {
                global::LightSwitchApplication.Leaderboard.DetailsClass.SetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RegistrationType
        {
            get
            {
                return global::LightSwitchApplication.Leaderboard.DetailsClass.GetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.RegistrationType);
            }
            set
            {
                global::LightSwitchApplication.Leaderboard.DetailsClass.SetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.RegistrationType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegistrationType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegistrationType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegistrationType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TeamType
        {
            get
            {
                return global::LightSwitchApplication.Leaderboard.DetailsClass.GetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamType);
            }
            set
            {
                global::LightSwitchApplication.Leaderboard.DetailsClass.SetValue(this, global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamType_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Leaderboard,
                global::LightSwitchApplication.Leaderboard.DetailsClass,
                global::LightSwitchApplication.Leaderboard.DetailsClass.IImplementation,
                global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass>.Entry
                __LeaderboardEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass>.Entry(
                    global::LightSwitchApplication.Leaderboard.DetailsClass.__Leaderboard_CreateNew,
                    global::LightSwitchApplication.Leaderboard.DetailsClass.__Leaderboard_Created,
                    global::LightSwitchApplication.Leaderboard.DetailsClass.__Leaderboard_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Leaderboard __Leaderboard_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Leaderboard> es)
            {
                return new global::LightSwitchApplication.Leaderboard(es);
            }
            private static void __Leaderboard_Created(global::LightSwitchApplication.Leaderboard e)
            {
                e.Leaderboard_Created();
            }
            private static bool __Leaderboard_AllowSaveWithErrors(global::LightSwitchApplication.Leaderboard e)
            {
                bool result = false;
                e.Leaderboard_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>> ConvictCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ConvictCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>> TeamCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>> Total
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.Total) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string> ConvictName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.ConvictName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string> TeamName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string> RegistrationType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.RegistrationType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string> TeamType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties.TeamType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; set; }
                new global::System.Nullable<int> ConvictCode { get; set; }
                new global::System.Nullable<int> TeamCode { get; set; }
                new global::System.Nullable<int> Total { get; set; }
                new string ConvictName { get; set; }
                new string TeamName { get; set; }
                new string RegistrationType { get; set; }
                new string TeamType { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ID_SetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Leaderboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, int>.Data> c, global::LightSwitchApplication.Leaderboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Leaderboard e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_SetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ID = v;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Leaderboard e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Entry
                    ConvictCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ConvictCode",
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictCode_Stub,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictCode_Validate,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictCode_GetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictCode_SetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictCode_OnValueChanged);
                private static void _ConvictCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Leaderboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Leaderboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ConvictCode, sf);
                }
                private static bool _ConvictCode_ComputeIsReadOnly(global::LightSwitchApplication.Leaderboard e)
                {
                    bool result = false;
                    e.ConvictCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConvictCode_Validate(global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConvictCode_Validate(r);
                }
                private static global::System.Nullable<int> _ConvictCode_GetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d)
                {
                    return d.ImplementationEntity.ConvictCode;
                }
                private static void _ConvictCode_SetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ConvictCode = v;
                }
                private static void _ConvictCode_OnValueChanged(global::LightSwitchApplication.Leaderboard e)
                {
                    e.ConvictCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Entry
                    TeamCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TeamCode",
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamCode_Stub,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamCode_Validate,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamCode_GetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamCode_SetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamCode_OnValueChanged);
                private static void _TeamCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Leaderboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Leaderboard.DetailsClass d, object sf)
                {
                    c(d, ref d._TeamCode, sf);
                }
                private static bool _TeamCode_ComputeIsReadOnly(global::LightSwitchApplication.Leaderboard e)
                {
                    bool result = false;
                    e.TeamCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _TeamCode_Validate(global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TeamCode_Validate(r);
                }
                private static global::System.Nullable<int> _TeamCode_GetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d)
                {
                    return d.ImplementationEntity.TeamCode;
                }
                private static void _TeamCode_SetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.TeamCode = v;
                }
                private static void _TeamCode_OnValueChanged(global::LightSwitchApplication.Leaderboard e)
                {
                    e.TeamCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Entry
                    Total = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Total",
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._Total_Stub,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._Total_ComputeIsReadOnly,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._Total_Validate,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._Total_GetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._Total_SetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._Total_OnValueChanged);
                private static void _Total_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Leaderboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Leaderboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Total, sf);
                }
                private static bool _Total_ComputeIsReadOnly(global::LightSwitchApplication.Leaderboard e)
                {
                    bool result = false;
                    e.Total_IsReadOnly(ref result);
                    return result;
                }
                private static void _Total_Validate(global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Total_Validate(r);
                }
                private static global::System.Nullable<int> _Total_GetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d)
                {
                    return d.ImplementationEntity.Total;
                }
                private static void _Total_SetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Total = v;
                }
                private static void _Total_OnValueChanged(global::LightSwitchApplication.Leaderboard e)
                {
                    e.Total_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Entry
                    ConvictName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Entry(
                        "ConvictName",
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictName_Stub,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictName_Validate,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictName_GetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictName_SetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._ConvictName_OnValueChanged);
                private static void _ConvictName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Leaderboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.Leaderboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ConvictName, sf);
                }
                private static bool _ConvictName_ComputeIsReadOnly(global::LightSwitchApplication.Leaderboard e)
                {
                    bool result = false;
                    e.ConvictName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConvictName_Validate(global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConvictName_Validate(r);
                }
                private static string _ConvictName_GetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d)
                {
                    return d.ImplementationEntity.ConvictName;
                }
                private static void _ConvictName_SetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ConvictName = v;
                }
                private static void _ConvictName_OnValueChanged(global::LightSwitchApplication.Leaderboard e)
                {
                    e.ConvictName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Entry
                    TeamName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Entry(
                        "TeamName",
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamName_Stub,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamName_Validate,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamName_GetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamName_SetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamName_OnValueChanged);
                private static void _TeamName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Leaderboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.Leaderboard.DetailsClass d, object sf)
                {
                    c(d, ref d._TeamName, sf);
                }
                private static bool _TeamName_ComputeIsReadOnly(global::LightSwitchApplication.Leaderboard e)
                {
                    bool result = false;
                    e.TeamName_IsReadOnly(ref result);
                    return result;
                }
                private static void _TeamName_Validate(global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TeamName_Validate(r);
                }
                private static string _TeamName_GetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d)
                {
                    return d.ImplementationEntity.TeamName;
                }
                private static void _TeamName_SetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TeamName = v;
                }
                private static void _TeamName_OnValueChanged(global::LightSwitchApplication.Leaderboard e)
                {
                    e.TeamName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Entry
                    RegistrationType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Entry(
                        "RegistrationType",
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._RegistrationType_Stub,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._RegistrationType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._RegistrationType_Validate,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._RegistrationType_GetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._RegistrationType_SetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._RegistrationType_OnValueChanged);
                private static void _RegistrationType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Leaderboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.Leaderboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RegistrationType, sf);
                }
                private static bool _RegistrationType_ComputeIsReadOnly(global::LightSwitchApplication.Leaderboard e)
                {
                    bool result = false;
                    e.RegistrationType_IsReadOnly(ref result);
                    return result;
                }
                private static void _RegistrationType_Validate(global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RegistrationType_Validate(r);
                }
                private static string _RegistrationType_GetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d)
                {
                    return d.ImplementationEntity.RegistrationType;
                }
                private static void _RegistrationType_SetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d, string v)
                {
                    d.ImplementationEntity.RegistrationType = v;
                }
                private static void _RegistrationType_OnValueChanged(global::LightSwitchApplication.Leaderboard e)
                {
                    e.RegistrationType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Entry
                    TeamType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Entry(
                        "TeamType",
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamType_Stub,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamType_Validate,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamType_GetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamType_SetImplementationValue,
                        global::LightSwitchApplication.Leaderboard.DetailsClass.PropertySetProperties._TeamType_OnValueChanged);
                private static void _TeamType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Leaderboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.Leaderboard.DetailsClass d, object sf)
                {
                    c(d, ref d._TeamType, sf);
                }
                private static bool _TeamType_ComputeIsReadOnly(global::LightSwitchApplication.Leaderboard e)
                {
                    bool result = false;
                    e.TeamType_IsReadOnly(ref result);
                    return result;
                }
                private static void _TeamType_Validate(global::LightSwitchApplication.Leaderboard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TeamType_Validate(r);
                }
                private static string _TeamType_GetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d)
                {
                    return d.ImplementationEntity.TeamType;
                }
                private static void _TeamType_SetImplementationValue(global::LightSwitchApplication.Leaderboard.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TeamType = v;
                }
                private static void _TeamType_OnValueChanged(global::LightSwitchApplication.Leaderboard e)
                {
                    e.TeamType_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Data _ConvictCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Data _TeamCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, global::System.Nullable<int>>.Data _Total;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Data _ConvictName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Data _TeamName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Data _RegistrationType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Leaderboard, global::LightSwitchApplication.Leaderboard.DetailsClass, string>.Data _TeamType;
            
        }
    
        #endregion
    }
    
    #endregion
}
