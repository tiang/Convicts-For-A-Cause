

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class Team : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Team entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Team()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Team(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Team> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Team.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Team_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Team_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TeamCode
        {
            get
            {
                return global::LightSwitchApplication.Team.DetailsClass.GetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamCode);
            }
            set
            {
                global::LightSwitchApplication.Team.DetailsClass.SetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TeamName
        {
            get
            {
                return global::LightSwitchApplication.Team.DetailsClass.GetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamName);
            }
            set
            {
                global::LightSwitchApplication.Team.DetailsClass.SetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TeamURL
        {
            get
            {
                return global::LightSwitchApplication.Team.DetailsClass.GetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamURL);
            }
            set
            {
                global::LightSwitchApplication.Team.DetailsClass.SetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamURL, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamURL_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamURL_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamURL_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TeamType
        {
            get
            {
                return global::LightSwitchApplication.Team.DetailsClass.GetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamType);
            }
            set
            {
                global::LightSwitchApplication.Team.DetailsClass.SetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return global::LightSwitchApplication.Team.DetailsClass.GetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.CreateDate);
            }
            set
            {
                global::LightSwitchApplication.Team.DetailsClass.SetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.CreateDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return global::LightSwitchApplication.Team.DetailsClass.GetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.ModifiedDate);
            }
            set
            {
                global::LightSwitchApplication.Team.DetailsClass.SetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.ModifiedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Total
        {
            get
            {
                return global::LightSwitchApplication.Team.DetailsClass.GetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.Total);
            }
            set
            {
                global::LightSwitchApplication.Team.DetailsClass.SetValue(this, global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.Total, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Total_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Team,
                global::LightSwitchApplication.Team.DetailsClass,
                global::LightSwitchApplication.Team.DetailsClass.IImplementation,
                global::LightSwitchApplication.Team.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamCode;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>.Entry
                __TeamEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>.Entry(
                    global::LightSwitchApplication.Team.DetailsClass.__Team_CreateNew,
                    global::LightSwitchApplication.Team.DetailsClass.__Team_Created,
                    global::LightSwitchApplication.Team.DetailsClass.__Team_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Team __Team_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Team> es)
            {
                return new global::LightSwitchApplication.Team(es);
            }
            private static void __Team_Created(global::LightSwitchApplication.Team e)
            {
                e.Team_Created();
            }
            private static bool __Team_AllowSaveWithErrors(global::LightSwitchApplication.Team e)
            {
                bool result = false;
                e.Team_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Team.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string> TeamCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string> TeamName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string> TeamURL
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamURL) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string> TeamType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.TeamType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime> CreateDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.CreateDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime> ModifiedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.ModifiedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string> Total
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties.Total) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string TeamCode { get; set; }
                new string TeamName { get; set; }
                new string TeamURL { get; set; }
                new string TeamType { get; set; }
                new global::System.DateTime CreateDate { get; set; }
                new global::System.DateTime ModifiedDate { get; set; }
                new string Total { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry
                    TeamCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry(
                        "TeamCode",
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamCode_Stub,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamCode_Validate,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamCode_GetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamCode_SetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamCode_OnValueChanged);
                private static void _TeamCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Team.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data> c, global::LightSwitchApplication.Team.DetailsClass d, object sf)
                {
                    c(d, ref d._TeamCode, sf);
                }
                private static bool _TeamCode_ComputeIsReadOnly(global::LightSwitchApplication.Team e)
                {
                    bool result = false;
                    e.TeamCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _TeamCode_Validate(global::LightSwitchApplication.Team e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TeamCode_Validate(r);
                }
                private static string _TeamCode_GetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d)
                {
                    return d.ImplementationEntity.TeamCode;
                }
                private static void _TeamCode_SetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TeamCode = v;
                }
                private static void _TeamCode_OnValueChanged(global::LightSwitchApplication.Team e)
                {
                    e.TeamCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry
                    TeamName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry(
                        "TeamName",
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamName_Stub,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamName_Validate,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamName_GetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamName_SetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamName_OnValueChanged);
                private static void _TeamName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Team.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data> c, global::LightSwitchApplication.Team.DetailsClass d, object sf)
                {
                    c(d, ref d._TeamName, sf);
                }
                private static bool _TeamName_ComputeIsReadOnly(global::LightSwitchApplication.Team e)
                {
                    bool result = false;
                    e.TeamName_IsReadOnly(ref result);
                    return result;
                }
                private static void _TeamName_Validate(global::LightSwitchApplication.Team e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TeamName_Validate(r);
                }
                private static string _TeamName_GetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d)
                {
                    return d.ImplementationEntity.TeamName;
                }
                private static void _TeamName_SetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TeamName = v;
                }
                private static void _TeamName_OnValueChanged(global::LightSwitchApplication.Team e)
                {
                    e.TeamName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry
                    TeamURL = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry(
                        "TeamURL",
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamURL_Stub,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamURL_ComputeIsReadOnly,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamURL_Validate,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamURL_GetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamURL_SetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamURL_OnValueChanged);
                private static void _TeamURL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Team.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data> c, global::LightSwitchApplication.Team.DetailsClass d, object sf)
                {
                    c(d, ref d._TeamURL, sf);
                }
                private static bool _TeamURL_ComputeIsReadOnly(global::LightSwitchApplication.Team e)
                {
                    bool result = false;
                    e.TeamURL_IsReadOnly(ref result);
                    return result;
                }
                private static void _TeamURL_Validate(global::LightSwitchApplication.Team e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TeamURL_Validate(r);
                }
                private static string _TeamURL_GetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d)
                {
                    return d.ImplementationEntity.TeamURL;
                }
                private static void _TeamURL_SetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TeamURL = v;
                }
                private static void _TeamURL_OnValueChanged(global::LightSwitchApplication.Team e)
                {
                    e.TeamURL_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry
                    TeamType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry(
                        "TeamType",
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamType_Stub,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamType_Validate,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamType_GetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamType_SetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._TeamType_OnValueChanged);
                private static void _TeamType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Team.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data> c, global::LightSwitchApplication.Team.DetailsClass d, object sf)
                {
                    c(d, ref d._TeamType, sf);
                }
                private static bool _TeamType_ComputeIsReadOnly(global::LightSwitchApplication.Team e)
                {
                    bool result = false;
                    e.TeamType_IsReadOnly(ref result);
                    return result;
                }
                private static void _TeamType_Validate(global::LightSwitchApplication.Team e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TeamType_Validate(r);
                }
                private static string _TeamType_GetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d)
                {
                    return d.ImplementationEntity.TeamType;
                }
                private static void _TeamType_SetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TeamType = v;
                }
                private static void _TeamType_OnValueChanged(global::LightSwitchApplication.Team e)
                {
                    e.TeamType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>.Entry
                    CreateDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>.Entry(
                        "CreateDate",
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._CreateDate_Stub,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._CreateDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._CreateDate_Validate,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._CreateDate_GetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._CreateDate_SetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._CreateDate_OnValueChanged);
                private static void _CreateDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Team.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Team.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateDate, sf);
                }
                private static bool _CreateDate_ComputeIsReadOnly(global::LightSwitchApplication.Team e)
                {
                    bool result = false;
                    e.CreateDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreateDate_Validate(global::LightSwitchApplication.Team e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreateDate_Validate(r);
                }
                private static global::System.DateTime _CreateDate_GetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d)
                {
                    return d.ImplementationEntity.CreateDate;
                }
                private static void _CreateDate_SetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.CreateDate = global::LightSwitchApplication.Team.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreateDate_OnValueChanged(global::LightSwitchApplication.Team e)
                {
                    e.CreateDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>.Entry
                    ModifiedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>.Entry(
                        "ModifiedDate",
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._ModifiedDate_Stub,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._ModifiedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._ModifiedDate_Validate,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._ModifiedDate_GetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._ModifiedDate_SetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._ModifiedDate_OnValueChanged);
                private static void _ModifiedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Team.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Team.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedDate, sf);
                }
                private static bool _ModifiedDate_ComputeIsReadOnly(global::LightSwitchApplication.Team e)
                {
                    bool result = false;
                    e.ModifiedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedDate_Validate(global::LightSwitchApplication.Team e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedDate_Validate(r);
                }
                private static global::System.DateTime _ModifiedDate_GetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedDate;
                }
                private static void _ModifiedDate_SetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ModifiedDate = global::LightSwitchApplication.Team.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ModifiedDate_OnValueChanged(global::LightSwitchApplication.Team e)
                {
                    e.ModifiedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry
                    Total = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Entry(
                        "Total",
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._Total_Stub,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._Total_ComputeIsReadOnly,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._Total_Validate,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._Total_GetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._Total_SetImplementationValue,
                        global::LightSwitchApplication.Team.DetailsClass.PropertySetProperties._Total_OnValueChanged);
                private static void _Total_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Team.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data> c, global::LightSwitchApplication.Team.DetailsClass d, object sf)
                {
                    c(d, ref d._Total, sf);
                }
                private static bool _Total_ComputeIsReadOnly(global::LightSwitchApplication.Team e)
                {
                    bool result = false;
                    e.Total_IsReadOnly(ref result);
                    return result;
                }
                private static void _Total_Validate(global::LightSwitchApplication.Team e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Total_Validate(r);
                }
                private static string _Total_GetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d)
                {
                    return d.ImplementationEntity.Total;
                }
                private static void _Total_SetImplementationValue(global::LightSwitchApplication.Team.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Total = v;
                }
                private static void _Total_OnValueChanged(global::LightSwitchApplication.Team e)
                {
                    e.Total_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data _TeamCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data _TeamName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data _TeamURL;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data _TeamType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>.Data _CreateDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, global::System.DateTime>.Data _ModifiedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass, string>.Data _Total;
            
        }
    
        #endregion
    }
    
    #endregion
}
